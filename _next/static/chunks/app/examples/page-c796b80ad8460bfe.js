(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[668],{6433:function(e,n,t){Promise.resolve().then(t.bind(t,66797)),Promise.resolve().then(t.t.bind(t,68326,23))},66797:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return CodeExamples}});var s=t(57437),a=t(2265),i=t(84402),c=t(62442),r=t(56224),o=t(43028),l=t(83754),d=t(25090),m=t(10815);let p=[{id:"properties-comparison",title:"Properties vs Getters/Setters",description:"C# 属性与 Java getters/setters 的对比",category:"comparison",content:'## Java 风格\n\n```java\npublic class JavaDevice {\n    private String name;\n    private boolean active;\n    \n    public String getName() { return name; }\n    public void setName(String name) { this.name = name; }\n    \n    public boolean isActive() { return active; }\n    public void setActive(boolean active) { this.active = active; }\n}\n```\n\n## C# 风格\n\n```csharp\npublic class CSharpDevice \n{\n    public string Name { get; set; } = string.Empty;\n    public bool IsActive { get; set; }\n    \n    // 计算属性\n    public string Status => IsActive ? "在线" : "离线";\n    \n    // 带验证的属性\n    private int _id;\n    public int Id \n    { \n        get => _id;\n        set => _id = value > 0 ? value : throw new ArgumentException("ID必须大于0");\n    }\n}\n```\n\n**主要差异:**\n- C# 属性语法更简洁\n- 支持自动实现的属性 `{ get; set; }`\n- 支持计算属性（只读）\n- 支持初始化器'},{id:"linq-vs-streams",title:"LINQ vs Java Streams",description:"数据查询操作的对比",category:"comparison",content:"## Java Streams\n\n```java\nList<Device> activeDevices = devices.stream()\n    .filter(d -> d.isActive())\n    .sorted(Comparator.comparing(Device::getName))\n    .collect(Collectors.toList());\n```\n\n## C# LINQ - 方法语法\n\n```csharp\nvar activeDevices = devices\n    .Where(d => d.IsActive)\n    .OrderBy(d => d.Name)\n    .ToList();\n```\n\n## C# LINQ - 查询语法\n\n```csharp\nvar activeDevices = from d in devices\n                   where d.IsActive\n                   orderby d.Name\n                   select d;\n```\n\n**优势对比:**\n- LINQ 提供两种语法：方法语法和查询语法\n- 查询语法更接近 SQL，易于理解\n- 方法语法更函数式，可以链式调用"},{id:"async-comparison",title:"异步编程对比",description:"Java CompletableFuture vs C# async/await",category:"comparison",content:'## Java CompletableFuture\n\n```java\npublic CompletableFuture<Device> getDeviceAsync(int id) {\n    return CompletableFuture.supplyAsync(() -> {\n        return deviceRepository.findById(id);\n    });\n}\n\n// 调用异步方法\ndeviceService.getDeviceAsync(1)\n    .thenAccept(device -> System.out.println(device.getName()));\n```\n\n## C# async/await\n\n```csharp\npublic async Task<Device> GetDeviceAsync(int id)\n{\n    var device = await _deviceRepository.FindAsync(id);\n    \n    if (device == null)\n        throw new DeviceNotFoundException("Device not found");\n        \n    return device;\n}\n\n// 调用异步方法\ntry \n{\n    var device = await deviceService.GetDeviceAsync(1);\n    Console.WriteLine(device.Name);\n}\ncatch (DeviceNotFoundException ex)\n{\n    Console.WriteLine($"Error: {ex.Message}");\n}\n```\n\n**C# 优势:**\n- 语法更简洁，接近同步代码\n- 异常处理更直观\n- 编译器自动生成状态机'}];function CodeExamples(){let[e,n]=(0,a.useState)("all"),[t,v]=(0,a.useState)(null),x="all"===e?p:p.filter(n=>n.category===e),copyToClipboard=async(e,n)=>{try{await navigator.clipboard.writeText(e),v(n),setTimeout(()=>v(null),2e3)}catch(e){console.error("复制失败:",e)}},u={code(e){let{node:n,inline:t,className:a,children:i,...c}=e,r=/language-(\w+)/.exec(a||"");return!t&&r?(0,s.jsx)(l.Z,{style:d.Z,language:r[1],PreTag:"div",customStyle:{margin:"1rem 0",borderRadius:"0.5rem",fontSize:"0.875rem",lineHeight:"1.5"},showLineNumbers:!0,wrapLines:!0,...c,children:String(i).replace(/\n$/,"")}):(0,s.jsx)("code",{className:a,...c,children:i})}};return(0,s.jsxs)("div",{className:"py-12 bg-secondary-50",id:"examples",children:[(0,s.jsxs)("div",{className:"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mb-8",children:[(0,s.jsx)("h2",{className:"text-3xl font-bold text-center text-secondary-900 mb-4",children:"代码示例库"}),(0,s.jsx)("p",{className:"text-lg text-secondary-600 mb-6 text-center",children:"Java 与 C# 的实际代码对比，以及 .NET 开发的最佳实践"}),(0,s.jsx)("div",{className:"flex flex-wrap gap-2 justify-center",children:[{key:"all",label:"全部示例"},{key:"comparison",label:"Java vs C#"},{key:"csharp",label:"C# 专用"}].map(t=>(0,s.jsx)("button",{onClick:()=>n(t.key),className:"px-4 py-2 rounded-lg font-medium transition-colors ".concat(e===t.key?"bg-primary-600 text-white":"bg-secondary-100 text-secondary-700 hover:bg-secondary-200"),children:t.label},t.key))})]}),(0,s.jsx)("div",{className:"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 space-y-8",children:x.map(e=>(0,s.jsxs)("div",{className:"bg-white rounded-lg border border-secondary-200 overflow-hidden shadow-sm",children:[(0,s.jsx)("div",{className:"p-6 border-b border-secondary-200",children:(0,s.jsxs)("div",{className:"flex items-start justify-between",children:[(0,s.jsxs)("div",{className:"flex-1",children:[(0,s.jsxs)("div",{className:"flex items-center mb-2",children:[(0,s.jsx)(i.Z,{className:"w-5 h-5 text-primary-600 mr-2"}),(0,s.jsx)("h3",{className:"text-xl font-semibold text-secondary-900",children:e.title}),(0,s.jsx)("span",{className:"ml-3 px-2 py-1 rounded-full text-xs font-medium ".concat("comparison"===e.category?"bg-blue-100 text-blue-700":"bg-green-100 text-green-700"),children:"comparison"===e.category?"对比":"C# 示例"})]}),(0,s.jsx)("p",{className:"text-secondary-600",children:e.description})]}),(0,s.jsx)("button",{onClick:()=>copyToClipboard(e.content,e.id),className:"flex items-center gap-2 px-3 py-2 bg-secondary-100 hover:bg-secondary-200 rounded-lg transition-colors ml-4",children:t===e.id?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(c.Z,{className:"w-4 h-4 text-green-600"}),(0,s.jsx)("span",{className:"text-sm text-green-600",children:"已复制"})]}):(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.Z,{className:"w-4 h-4 text-secondary-600"}),(0,s.jsx)("span",{className:"text-sm text-secondary-600",children:"复制代码"})]})})]})}),(0,s.jsx)("div",{className:"p-6 prose prose-lg max-w-none prose-headings:text-secondary-900 prose-p:text-secondary-700 prose-strong:text-secondary-900",children:(0,s.jsx)(o.UG,{remarkPlugins:[m.Z],components:u,children:e.content})})]},e.id))}),0===x.length&&(0,s.jsxs)("div",{className:"text-center py-12",children:[(0,s.jsx)(i.Z,{className:"w-12 h-12 text-secondary-400 mx-auto mb-4"}),(0,s.jsx)("p",{className:"text-secondary-600",children:"该分类下暂无代码示例"})]})]})}}},function(e){e.O(0,[946,107,971,472,744],function(){return e(e.s=6433)}),_N_E=e.O()}]);